<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright [2020] [lihaifeng,xuhang]
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.gitee</groupId>
	<artifactId>phoenix</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0.RELEASE</version>

	<name>微服务平台::根节点POM</name>
	<url>https://blog.dlihaifeng.com</url>

	<modules>
		<module>common</module>
		<module>infrastructure</module>
		<module>application</module>
	</modules>

	<properties>
		<mapstruct.version>1.3.1.Final</mapstruct.version>
		<maven.docker.version>1.2.2</maven.docker.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.version>3.8.1</maven.compiler.version>
		<maven.resources.version>3.1.0</maven.resources.version>
		<maven.versions.version>2.7</maven.versions.version>
		<maven.encoding>UTF-8</maven.encoding>
		<bootstrap.swagger.version>2.0.1</bootstrap.swagger.version>
		<cxf.rs.version>3.3.4</cxf.rs.version>
		<cxf.rs.json>2.10.1</cxf.rs.json>
		<druid.starter.version>1.1.21</druid.starter.version>
		<flowable.starter.version>6.5.0</flowable.starter.version>
		<guava.version>27.0.1-jre</guava.version>
		<hutool.version>5.2.0</hutool.version>
		<javassist.version>3.26.0-GA</javassist.version>
		<jwt.version>3.9.0</jwt.version>
		<jjwt.version>0.9.1</jjwt.version>
		<keycloak.version>9.0.0</keycloak.version>
		<lombok.version>1.18.12</lombok.version>
		<mybatisplus.starter.version>3.3.1</mybatisplus.starter.version>
		<smart.doc.version>1.7.5</smart.doc.version>
		<shardingjdbc.starter.version>4.0.0</shardingjdbc.starter.version>
		<springfox.version>2.9.2</springfox.version>
		<swagger.version>1.5.22</swagger.version>
		<ttl.version>2.11.4</ttl.version>

		<!-- bom依赖配置管理 -->
		<spring-boot.version>2.2.5.RELEASE</spring-boot.version>
		<spring-boot-admin.version>2.2.2</spring-boot-admin.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<spring-cloud-alibaba.version>2.2.0.RELEASE</spring-cloud-alibaba.version>
		<spring.version>5.2.3.RELEASE</spring.version>
	</properties>

	<dependencies>
		<!--  lombok自动添加getset  -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<!--  实体类转换  -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<!--  配置可视化，可以通过yml直接点击到java代码配置位置  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-dependencies</artifactId>
				<version>${spring-boot-admin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<artifactId>common-bom</artifactId>
				<groupId>com.gitee</groupId>
				<version>1.0.0.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.auth0</groupId>
				<artifactId>java-jwt</artifactId>
				<version>${jwt.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<!--TTL-->
			<dependency>
				<artifactId>transmittable-thread-local</artifactId>
				<groupId>com.alibaba</groupId>
				<version>${ttl.version}</version>
			</dependency>
			<dependency>
				<artifactId>keycloak-spring-boot-starter</artifactId>
				<groupId>org.keycloak</groupId>
				<version>${keycloak.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatisplus.starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-annotation</artifactId>
				<version>${mybatisplus.starter.version}</version>
			</dependency>
			<dependency>
				<artifactId>mybatis-plus-extension</artifactId>
				<groupId>com.baomidou</groupId>
				<version>${mybatisplus.starter.version}</version>
			</dependency>
			<dependency>
				<artifactId>mybatis-plus-generator</artifactId>
				<groupId>com.baomidou</groupId>
				<version>${mybatisplus.starter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shardingsphere</groupId>
				<artifactId>sharding-jdbc-spring-boot-starter</artifactId>
				<version>${shardingjdbc.starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.starter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.flowable</groupId>
				<artifactId>flowable-spring-boot-starter</artifactId>
				<version>${flowable.starter.version}</version>
			</dependency>
			<!--   cxf版ws,rs,包括swagger-ui   -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
				<version>${cxf.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
				<version>${cxf.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-features-logging</artifactId>
				<version>${cxf.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-service-description-swagger</artifactId>
				<version>${cxf.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${cxf.rs.json}</version>
			</dependency>
			<!--   bootstrap版swagger   -->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-spring-boot-starter</artifactId>
				<version>${bootstrap.swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-micro-spring-boot-starter</artifactId>
				<version>${bootstrap.swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-models</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--swagger 依赖-->
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-models</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<artifactId>swagger-annotations</artifactId>
				<groupId>io.swagger</groupId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-bean-validators</artifactId>
				<version>${springfox.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox.version}</version>
			</dependency>
			<!--   自动生成文档   -->
			<dependency>
				<groupId>com.github.shalousun</groupId>
				<artifactId>smart-doc</artifactId>
				<version>${smart.doc.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.javassist/javassist -->
			<dependency>
				<artifactId>javassist</artifactId>
				<groupId>org.javassist</groupId>
				<version>${javassist.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<!-- 先指定 src/main/resources下所有文件及文件夹为资源文件,*.yml,*.yaml,*.properties进行变量替换操作 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.yaml</include>
					<include>**/*.yml</include>
					<include>**/*.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${maven.encoding}</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.version}</version>
				<configuration>
					<encoding>${maven.encoding}</encoding>
					<useDefaultDelimiters>true</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${maven.versions.version}</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!--docker镜像相关的配置信息-->
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${maven.docker.version}</version>
					<configuration>
						<dockerDirectory>${basedir}/src/main/docker</dockerDirectory>
						<dockerHost>${docker-host}</dockerHost>
						<forceTags>true</forceTags>
						<!--生成的镜像名称-->
						<!--镜像生成后需要推送到某个仓库地址的配置-->
						<imageName>
							${docker-registry-url}/${docker-registry-org}/${project.artifactId}:${project.version}
						</imageName>
						<!--是否向配置的仓库推送镜像-->
						<pushImage>true</pushImage>
						<!-- 使用Dockerfile -->
						<registryUrl>${docker-registry-url}</registryUrl>
						<serverId>${docker-registry-serverId}</serverId>        <!--覆盖相同标签镜像-->
						<!--这里是复制 jar 包到 docker 容器指定目录配置-->                <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<!--jar 包所在的路径  此处配置的 即对应 target 目录-->
								<directory>${project.build.directory}</directory>
								<!-- 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　-->
								<include>${project.artifactId}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- 开发 -->
		<profile>
			<id>dev-xh</id>
			<activation>
				<!--默认激活配置-->
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!--当前环境-->
				<pom.profile>xh</pom.profile>
				<!--Nacos配置中心地址-->
				<pom.nacos.address>106.14.155.108:8848</pom.nacos.address>
				<!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
				<pom.nacos.namespace>98a66c0d-1da3-43e9-acb4-c0b06abcaad6</pom.nacos.namespace>
				<!--    扩展类型    -->
				<pom.nacos.fileext>yaml</pom.nacos.fileext>
				<pom.nacos.share>common.yaml</pom.nacos.share>
				<docker-host>http://127.0.0.1:2375</docker-host>
				<docker-registry-serverId>aliyun-dockerhub</docker-registry-serverId>
				<docker-registry-url>registry.cn-shanghai.aliyuncs.com</docker-registry-url>
				<docker-registry-org>phoenix-platform</docker-registry-org>
			</properties>
		</profile>
		<profile>
			<id>dev-lhf</id>
			<properties>
				<!--当前环境-->
				<pom.profile>lhf</pom.profile>
				<!--Nacos配置中心地址-->
				<pom.nacos.address>106.14.155.108:8848</pom.nacos.address>
				<!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
				<pom.nacos.namespace>477d63ba-d9b4-472f-83a8-7020412fcae0</pom.nacos.namespace>
				<!--    扩展类型    -->
				<pom.nacos.fileext>yaml</pom.nacos.fileext>
				<pom.nacos.share>common.yaml</pom.nacos.share>
				<docker-host>http://127.0.0.1:2375</docker-host>
				<docker-registry-serverId>aliyun-dockerhub</docker-registry-serverId>
				<docker-registry-url>registry.cn-shanghai.aliyuncs.com</docker-registry-url>
				<docker-registry-org>phoenix-platform</docker-registry-org>
			</properties>
		</profile>
	</profiles>
</project>