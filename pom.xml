<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2019-2019
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring-cloud-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-dependencies</artifactId>
        <version>${spring-boot-admin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <artifactId>common-bom</artifactId>
        <groupId>com.gitee</groupId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>${hutool.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <artifactId>keycloak-spring-boot-starter</artifactId>
        <groupId>org.keycloak</groupId>
        <version>${keycloak.version}</version>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <version>${mybatisplus.starter.version}</version>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-annotation</artifactId>
        <version>${mybatisplus.starter.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis-plus-extension</artifactId>
        <groupId>com.baomidou</groupId>
        <version>${mybatisplus.starter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shardingsphere</groupId>
        <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
        <version>${shardingjdbc.starter.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid.starter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flowable</groupId>
        <artifactId>flowable-spring-boot-starter</artifactId>
        <version>${flowable.starter.version}</version>
      </dependency>
      <!--   cxf版ws,rs,包括swagger-ui   -->
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
        <version>${cxf.rs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-spring-boot-starter-jaxws</artifactId>
        <version>${cxf.rs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-features-logging</artifactId>
        <version>${cxf.rs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-service-description-swagger</artifactId>
        <version>${cxf.rs.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
        <version>${cxf.rs.json}</version>
      </dependency>
      <!--   bootstrap版swagger   -->
      <dependency>
        <groupId>com.github.xiaoymin</groupId>
        <artifactId>knife4j-spring-boot-starter</artifactId>
        <version>${bootstrap.swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.xiaoymin</groupId>
        <artifactId>knife4j-micro-spring-boot-starter</artifactId>
        <version>${bootstrap.swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox.version}</version>
        <exclusions>
          <exclusion>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-models</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!--swagger 依赖-->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-models</artifactId>
        <version>${swagger.version}</version>
      </dependency>
      <dependency>
        <artifactId>swagger-annotations</artifactId>
        <groupId>io.swagger</groupId>
        <version>${swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-bean-validators</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.xiaoymin</groupId>
        <artifactId>swagger-bootstrap-ui</artifactId>
        <version>${sbu.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <!--   自动生成文档   -->
      <dependency>
        <groupId>com.github.shalousun</groupId>
        <artifactId>smart-doc</artifactId>
        <version>${smart.doc.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.javassist/javassist -->
      <dependency>
        <artifactId>javassist</artifactId>
        <groupId>org.javassist</groupId>
        <version>${javassist.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <artifactId>conversion-platform</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <modules>
    <module>common</module>
    <module>gateway</module>
    <module>application</module>
    <module>infrastructure</module>
  </modules>

  <name>conversion-platform::根节点POM</name>
  <url>https://blog.dlihaifeng.com</url>

  <groupId>com.gitee</groupId>

  <dependencies>
    <!--  lombok自动添加getset  -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <!--  实体类转换  -->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <!--  配置可视化，可以通过yml直接点击到java代码配置位置  -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <properties>
    <mapstruct.version>1.3.0.Final</mapstruct.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.version>3.8.1</maven.compiler.version>
    <maven.resources.version>3.1.0</maven.resources.version>
    <maven.encoding>UTF-8</maven.encoding>
    <bootstrap.swagger.version>1.9.6</bootstrap.swagger.version>
    <cxf.rs.version>3.3.4</cxf.rs.version>
    <cxf.rs.json>2.10.1</cxf.rs.json>
    <druid.starter.version>1.1.21</druid.starter.version>
    <flowable.starter.version>6.4.2</flowable.starter.version>
    <guava.version>27.0.1-jre</guava.version>
    <hutool.version>5.0.5</hutool.version>
    <javassist.version>3.24.1-GA</javassist.version>
    <keycloak.version>8.0.1</keycloak.version>
    <lombok.version>1.18.10</lombok.version>
    <mybatisplus.starter.version>3.1.1</mybatisplus.starter.version>
    <smart.doc.version>1.7.5</smart.doc.version>
    <shardingjdbc.starter.version>4.0.0-RC2</shardingjdbc.starter.version>
    <springfox.version>2.9.2</springfox.version>
    <swagger.version>1.5.22</swagger.version>
    <sbu.version>1.9.6</sbu.version>

    <!-- bom依赖配置管理 -->
    <spring-boot.version>2.2.1.RELEASE</spring-boot.version>
    <spring-boot-admin.version>2.2.0</spring-boot-admin.version>
    <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
    <spring-cloud-alibaba.version>2.1.1.RELEASE</spring-cloud-alibaba.version>
    <spring.version>5.2.0.RELEASE</spring.version>
  </properties>
  <build>
    <resources>
      <!-- 先指定 src/main/resources下所有文件及文件夹为资源文件 -->
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${maven.encoding}</encoding>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.version}</version>
        <configuration>
          <encoding>${maven.encoding}</encoding>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <!--docker镜像相关的配置信息-->
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.4.13</version>
          <configuration>
            <dockerDirectory>${project.basedir}/</dockerDirectory>
            <dockerHost>${docker-host}</dockerHost>
            <forceTags>true</forceTags>
            <!--生成的镜像名称-->
            <!--镜像生成后需要推送到某个仓库地址的配置-->
            <imageName>${docker-registry-url}/${docker-registry-org}/${project.artifactId}:${project.version}
            </imageName>
            <!--是否向配置的仓库推送镜像-->
            <pushImage>true</pushImage>
            <!-- 使用Dockerfile -->
            <registryUrl>${docker-registry-url}</registryUrl>
            <!--这里是复制 jar 包到 docker 容器指定目录配置-->
            <serverId>${docker-registry-serverId}</serverId>        <!--覆盖相同标签镜像-->
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>build</goal>
                <goal>push</goal>
              </goals>
              <id>package</id>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <!-- 开发 -->
    <profile>
      <id>dev-docker</id>
      <activation>
        <!--默认激活配置-->
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!--当前环境-->
        <env.profile>dev</env.profile>
        <!--Nacos配置中心地址-->
        <env.nacos.address>106.14.155.108:8848</env.nacos.address>
        <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
        <env.nacos.namespace>a4220c7b-bb1f-4b5f-a274-118ed95c101f</env.nacos.namespace>
        <!--    扩展类型    -->
        <env.nacos.fileext>yaml</env.nacos.fileext>
        <env.nacos.share>common.yaml</env.nacos.share>
        <env.nacos.refresh>common.yaml</env.nacos.refresh>
        <docker-host>http://106.14.155.108:2375</docker-host>
        <docker-registry-serverId>docker-hub</docker-registry-serverId>
        <docker-registry-url>docker.io</docker-registry-url>
        <docker-registry-org>oxaxo</docker-registry-org>
      </properties>
    </profile>
    <profile>
      <id>dev-harbor</id>
      <properties>
        <!--当前环境-->
        <env.profile>dev</env.profile>
        <!--Nacos配置中心地址-->
        <env.nacos.address>106.14.155.108:8848</env.nacos.address>
        <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
        <env.nacos.namespace>a4220c7b-bb1f-4b5f-a274-118ed95c101f</env.nacos.namespace>
        <!--    扩展类型    -->
        <env.nacos.fileext>yaml</env.nacos.fileext>
        <env.nacos.share>common.yaml</env.nacos.share>
        <env.nacos.refresh>common.yaml</env.nacos.refresh>
        <docker-host>http://192.168.0.5:2375</docker-host>
        <docker-registry-serverId>harbor-registry</docker-registry-serverId>
        <docker-registry-url>harbor.dlihaifeng.cn</docker-registry-url>
        <docker-registry-org>library</docker-registry-org>
      </properties>
    </profile>
  </profiles>
</project>